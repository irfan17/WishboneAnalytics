results <- matrix(nrow=0,ncol=2)
for(i in mkts){
temp <- round(record(i, buffer),2)
results <- rbind(results, cbind(i, temp))
print(i)
}
colnames(results) <- c("Market", "Win %")
data.frame(results)
}
chart_composite_top('ES',0.5,'2022-06-16')
chart_composite_top('ES',0.5,'2022-06-14')
chart_composite_top('ES',0.5)
head(get_prices('ES'))
tail(get_prices('ES'))
head(similar_years_db('ES'))
chart_composite_top('ES',0.5)
market <- 'ES'
threshold <- 0.5
latest <- '2022-06-15'
data <- get_composite_top(market, threshold, latest)
cur <- normalize(market, year(latest), latest)
cur <- cur[,c('week','equity')]
colnames(cur) <- c('week','current')
data <- merge(x = data, y = cur, by = 'week', all.x = TRUE)
get_composite_top('ES',0.5)
similar <- similar_years_db(market, latest)
head(similar)
top <- similar[similar$Correlation >= threshold,'Year']
data <- get_prices(market)
data <- data[year(index(data)) %in% top,]
head(data)
data <- get_prices(market)
head(data)
top
chart_composite_top('ES'. 0.5, '2020-06-05')
chart_composite_top('ES', 0.5, '2020-06-05')
chart_composite_top('ES', 0.7, '2020-06-05')
chart_composite_top('ES', 0.7, '2022-06-05')
chart_composite_top('ES', 0.5, '2022-06-05')
chart_composite_top('ES', 0.5, '2022-06-01')
data <- read.csv('C://users//irfan//downloads//congress_votes_117-2021_s226.csv')
data <- read.csv('C://users//irfan//downloads//congress_votes_117-2021_s226.csv', header = F)
head(data)
data <- read.csv('C://users//irfan//downloads//congress_votes_117-2021_s226.csv', header = T, skip = 1)
head(data)
url <- 'https://www.senate.gov/legislative/LIS/roll_call_lists/vote_menu_117_2.xml'
library(dplyr)
library(xml2)
data <- read_xml(url)
head(data)
data <- xmlParse(data)
library(XML)
data <- xmlParse(data)
head(data)
data
xmlToDataFrame(data)
xmlToDataFrame(url)
xmlToDataFrame(xmlParse(url))
xmlToDataFrame(xmlParse(read_xml(url)))
data <- xmlParse(url)
data <- xmlParse(read_xml(url))
head(data)
data
data <- xmlParse(read_xml(url))
xmlToList(data)
all <- xmlToList(data)
all$congress
all$congress_year
all$votes
all$votes$vote
all$votes$vote$vote_number
all$votes$vote$vote_number[1]
all$votes$vote$vote_number[2]
all$votes[1]
all$votes[2]
all$votes$vote$issue['S. 2938']
all$votes$vote$issue == 'S. 2938'
all[all$votes$vote$issue == 'S. 2938']
all[all$votes$vote$issue == 'S. 2938',]
all$votes$vote$issue[['S. 2938'][]
all$votes$vote$issue[['S. 2938']
all$votes$vote$issue[['S. 2938']]
data <- xmlParse(read_xml(url))
data
xpathApply(xml,"//votes/vote/vote_number",xmlValue)
xpathApply(data,"//votes/vote/vote_number",xmlValue)
xpathApply(data,"//votes/vote/vote_number",xmlValue)[[1]]
xpathApply(data,"//votes/vote/issue",xmlValue)[[1]]
xpathApply(data,"//votes/vote/issue",xmlValue)
xpathApply(data,"//votes/vote/issue",xmlValue) %>% length()
head(data)
data
xpathApply(data,"//votes/vote/issue/vote_tally",xmlValue) %>% length()
xpathApply(data,"//votes/vote/issue/vote_tally",xmlValue)
xpathApply(data,"//votes/vote/issue/vote_tally/yeas",xmlValue)
xpathApply(data,"//votes/vote/vote_tally",xmlValue) %>% length()
xpathApply(data,"//votes/vote/vote_tally",xmlValue)[1]
xpathApply(data,"//votes/vote/vote_tally",xmlValue)[2]
xpathApply(data,"//votes/vote/vote_tally/yeas",xmlValue)[2]
library(ggplot2)
library(dplyr)
library(urbnmapr)
library(rvest)
library(httr)
url <- 'https://en.wikipedia.org/wiki/1964_United_States_presidential_election_in_Alabama#Results_by_county'
url %>% html() %>% html_nodes(xpath = '/html/body/div[3]/div[3]/div[5]/div[1]/table[3]') %>% html_table()
url %>% read_html() %>% html_nodes(xpath = '//*[@id="mw-content-text"]/div[1]/table[4]') %>% html_table()
url %>% read_html() %>% html_nodes(xpath = '//*[@id="mw-content-text"]/div[1]/table[4]/tbody') %>% html_table()
url %>% read_html() %>% html_nodes(xpath = '//*[@id="mw-content-text"]/div[1]/table[4]') %>% html_table()
url %>% read_html() %>% html_nodes(xpath = '//*[@id="mw-content-text"]/div[1]/table[4]') %>% html_table(fill = TRUE)
test <- url %>% read_html() %>% html_nodes(xpath = '//*[@id="mw-content-text"]/div[1]/table[4]') %>% html_table(fill = TRUE)
head(test)
test[1]
test[1,]
test[[1]]
test[[1]][1]
test[[1]][1,]
test[[1]][2,]
colnames(test[[1]][2,])
colnames(test[[2]][2,])
colnames(test[[1]][2,])
colnames(test[[1]][1,])
colnames(test[[1]][3,])
colnames(test[[1]])
as.data.frame(test[[1]])
data <- as.data.frame(test[[1]])
colnames(data)
colnames(data) <- c('County','RVotes','RPerc','DVotes','DPerc','MarginVotes','MarginPerc',"Total")
head(data)
data[1,]
data[1,] <- NULL
head(data)
data <- data[-1,]
head(data)
plot(data$County,data$RPerc)
plot(data$County,data$RPerc,type ='h')
plot(data$County,data$RPerc,type ='b')
plot(data$County,data$RPerc,type ='l')
plot(data$DPerc,data$RPerc,type ='l')
plot(data$DPerc,data$RPerc)
head(data)
samp <- data[,c("County","MarginPerc)]
samp <- data[,c("County","MarginPerc")]
samp$MarginPerc <- gsub("%","",samp$MarginPerc)
samp$MarginPerc <- as.numeric(samp$MarginPerc)
plot(samp)
str(samp)
plot(samp$County,samp$MarginPerc, type = 'h')
plot(samp$County,samp$MarginPerc, type = 'b')
ggplot(samp, aes(x = County, y = MarginPerc)) + geom_bar
ggplot(samp, aes(x = County, y = MarginPerc)) + geom_bar()
ggplot(samp, aes(x = County, y = MarginPerc)) + geom_bar(y = MarginPerc)
ggplot(samp, aes(x = County, y = MarginPerc)) + geom_bar(y = data$MarginPerc)
ggplot(samp, aes(x = County, y = MarginPerc)) + geom_bar(y = samp$MarginPerc)
ggplot(samp, aes(x = County)) + geom_bar(y = samp$MarginPerc)
ggplot(samp, aes(x = County)) + geom_bar(y = samp$MarginPerc, stat = 'value')
ggplot(samp, aes(x = County)) + geom_bar(y = samp$MarginPerc, stat = 'sum')
data <- read.csv("c://users//irfan//downloads//countypres.csv")
head(data)
unique(data$mode)
head(data %>% filter(mode == 'FAILSAFE'))
head(data %>% filter(year == 2020 & county_name == 'ABBEVILLE'))
head(data %>% filter(year == 2020 & county_name == 'ABBEVILLE'), 10)
head(data %>% filter(year == 2020 & county_name == 'ABBEVILLE'), 20)
head(data %>% filter(year == 2020 & county_name == 'ABBEVILLE'), 30)
head(data %>% filter(year == 2020 & county_name == 'ABBEVILLE'), 50)
head(data %>% filter(year == 2020 & county_name == 'ABBEVILLE'), 100)
head(data %>% filter(year == 2020 & county_name == 'ABBEVILLE' & mode == 'TOTAL'))
head(data %>% filter(year == 2020 & county_name == 'CALVERT' & mode == 'TOTAL'))
head(data %>% filter(year == 2020 & county_name == 'CALVERT'))
head(data %>% filter(year == 2020 & county_name == 'ABBEVILLE' & mode == 'TOTAL'))
head(data %>% filter(year == 2020 & county_name == 'ABBEVILLE'))
head(data %>% filter(year == 2020 & county_name == 'ABBEVILLE'), 100)
abbe <- head(data %>% filter(year == 2020 & county_name == 'ABBEVILLE'), 100)
abbe <- abbe %>% select(c("candidate","party","candidatevotes","totalvotes"))
head(abbe)
abbe %>% group_by(candidate)
abbe %>% summarize(sum(candidatevotes),group_by(candidate))
abbe %>% summarize(sum(as.numeric(candidatevotes)),group_by(candidate))
abbe %>% group_by(candidate) %>% summarise_all(candidatevotes)
abbe %>% group_by(candidate) %>% summarise_all(candidatevotes)
abbe %>% group_by(candidate, candidatevotes) %>% summarise_all(sum)
abbe %>% group_by(candidate) %>% summarise_all(sum)
str(abbe$candidatevotes)
head(abbe)
abbe %>% select(c(party,candidatevotes)) %>% group_by(party) %>% summarise_all('sum')
abbe %>% select(c(candidate,party,candidatevotes)) %>% group_by(candidate,party) %>% summarise_all('sum')
abbe %>% select(c(candidate,party,candidatevotes,totalvotes)) %>% group_by(candidate,party,totalvotes) %>% summarise_all('sum')
library(dplyr)
library(ggplot2)
library(quantmod)
library(lubridate)
setwd("c://users//irfan//downloads")
gas <- read.csv("GASREGW.csv")
library(dplyr)
library(Quandl)
library(quantmod)
library(stringr)
library(data.table)
get_prices <- function(market, start=NULL, end = NULL){
data <- read.csv(paste0('https://eodhistoricaldata.com/api/eod/',market,'.COMM?api_token=60a9489d730841.34466022&order=a&fmt=csv'))
data <- head(data,-2)
data <- data[1:length(data$Date),]
data <- data[,c(1:5,7)]
data$Date <- as.Date(data$Date,'%Y-%m-%d')
#data <- xts(data[,2:5],data$Date)
row.names(data) <- NULL
data
}
get_prices_xts <- function(market, start=NULL, end = NULL){
data <- read.csv(paste0('https://eodhistoricaldata.com/api/eod/',market,'.COMM?api_token=60a9489d730841.34466022&order=a&fmt=csv'))
data <- head(data,-2)
data <- data[1:length(data$Date),]
data <- data[,c(1:5,7)]
data$Date <- as.Date(data$Date,'%Y-%m-%d')
data <- xts(data[,2:5],data$Date)
data
}
rbob <- get_prices_xts('RBOB', start = '2000-11-01')
rbob <- get_prices_xts('RBOB', start = '2000-11-01', end = '2022-07-06')
rbob <- get_prices_xts('RB', start = '2000-11-01')
head(rbob)
rbob <- to.weekly(rbob)
head(rbob)
head(gas)
rbob <- get_prices_xts('RB')
head(rbob)
gas$DATE <- as.Date(gas$DATE, '%Y-%m-%d')
head(gas)
gas <- gas %>% filter(DATE > '2000-11-01')
head(gas)
tail(gas)
head(rbob)
rbob <- to.weekly(rbob)
head(rbob)
fut <- as.data.frame(index(rbob), rbob$rbob.Close)
head(fut)
fut <- as.data.frame(c(index(rbob), rbob$rbob.Close))
head(fut)
fut <- as.data.frame(index(rbob), rbob$rbob.Close)
fut <- cbind(index(rbob), rbob$rbob.Close)
fut <- as.data.frame(index(rbob), as.data.frame(rbob$rbob.Close))
fut <- as.data.frame(as.data.frame(index(rbob)), as.data.frame(rbob$rbob.Close))
head(gas)
gas <- as.xts(gas$GASREGW, gas$DATE)
head(gas)
gasoline <- xts(gas$GASREGW, gas$DATE)
head(gasoline)
gasoline <- xts(as.numeric(gas$GASREGW), gas$DATE)
head(gasoline)
gasoline <- xts(as.numeric(as.character(gas$GASREGW)), gas$DATE)
head(gasoline)
head(rbob)
head(fut)
rbob <- rbob$rbob.Close
fut <- merge.xts(rbob, gasoline)
head(fut)
rbobtest <- time(rbob)<- time(rbob) %>% as.yearmon() %%> as.date()
rbobtest <- time(rbob)<- time(rbob) %>% as.yearmon() %>% as.date()
rbobtest <- time(rbob)<- time(rbob) %>% as.yearmon() %>% as.Date()
head(rbobtest)
rbobtest <- time(rbob)<- time(rbob) %>% as.weeknum() %>% as.Date()
dates <- as.vector(index(rbob))
head(dates)
dates <- as.vector(as.Date(index(rbob)))
head(dates)
dates <- as.data.frame(index(rbob))
head(dates)
head(rbob)
rbob <- get_prices_xts('RB')
rbob <- to.weekly(rbob)
head(rbob)
rbob <- rbob$rbob.Close
head(dates)
dates <- as.data.frame(index(rbob))
head(dates)
rbob_test <- as.date.frame(rbob$rbob.Close)
library(quantmod)
rbob_test <- as.date.frame(rbob$rbob.Close)
rbob_test <- as.date.frame(rbob)
rbob_test <- date.frame(rbob$rbob.Close)
rbob_test <- as.date.frame(rbob)
rbob_test <- as.dateframe(rbob)
as.data.frame('test')
head(as.date.frame(rbob$rbob.Close))
head(as.date.frame(rbob))
head(rbob)
head(gasoline)
head(gas)
head(data.frame(rbob, gas$GASREGW))
tail(gas)
rbind(gas, c('2022-07-03',4.872))
rbind(gas, c('2022-07-03',4.872)) %>% tail()
gas <- rbind(gas, c('2022-07-03',4.872))
gas <- rbind(gas, c('2022-07-06',4.872))
head(gas)
tail(gas)
head(data.frame(rbob, gas$GASREGW))
comb <- data.frame(rbob, gas$GASREGW)
head(comb)
tail(comb)
comb['2022-07-03',]
comb['2022-07-03', 'gas.GASREGW']
comb['2022-07-03', 'gas.GASREGW'] <- 4.771
tail(comb)
comb['2022-07-03', 'gas.GASREGW'] <- '4.771'
comb['2022-07-03', 'gas.GASREGW'] <- NULL
tail(comb)
comb['2022-07-03', 'gas.GASREGW']
comb['2022-07-03', 'gas.GASREGW'] <- as.factor(4.771)
tail(comb)
comb['2022-07-03',]
comb['2022-07-03',] <- c(3.6784,4.771)
xts(c(3.6784,4.771),'2022-07-03')
xts(c(3.6784,4.771),as.Date('2022-07-03','%Y-%m-%d'))
xts(data.frame(c(3.6784,4.771)),as.Date('2022-07-03','%Y-%m-%d'))
xts(cbind(3.6784,4.771)),as.Date('2022-07-03','%Y-%m-%d'))
xts(cbind(3.6784,4.771),as.Date('2022-07-03','%Y-%m-%d'))
comb['2022-07-03',] <- xts(cbind(3.6784,4.771),as.Date('2022-07-03','%Y-%m-%d'))
tail(comb)
str(comb['2022-07-03'])
str(comb['2022-07-03',])
str(comb$gas.GASREGW)
comb$gas.GASREGW <- as.numeric(comb$gas.GASREGW)
head(comb)
comb <- data.frame(rbob, gas$GASREGW)
comb$gas.GASREGW <- as.numeric(as.character(comb$gas.GASREGW))
head(comb)
tail(comb)
comb$gas.GASREGW['2022-07-03'] <- 4.771
tail(comb)
comb$gas.GASREGW['2022-07-03']
comb['2022-07-03',]
comb['2022-07-03','gas.GASREGW']
comb['2022-07-03','gas.GASREGW'] <- 4.771
comb['2022-07-03','gas.GASREGW']
comb['2022-07-05','gas.GASREGW'] <- NA
tail(comb)
chartSeries(comb)
ggplot(fortify(comb), aes(x=index(comb), y = rbob.Close))
ggplot(fortify(comb), aes(x=index(comb), y = rbob.Close)) + geom_line()
ggplot(fortify(comb), aes(x=index(comb), y = rbob.Close)) + geom_line() + geom_line(gas.GASREGW)
ggplot(fortify(comb), aes(x=index(comb), y = rbob.Close)) + geom_line() + geom_line(comb$gas.GASREGW)
ggplot(fortify(comb), aes(x=index(comb), y = rbob.Close)) + geom_line() + geom_line(data = comb, aes(y = gas.GASREGW))
ggplot(fortify(comb), aes(x=index(comb), y = rbob.Close)) + geom_line() + geom_line(data = comb, aes(y = gas.GASREGW), color = 'green')
ggplot(fortify(comb), aes(x=index(comb), y = rbob.Close)) + geom_line(color = 'blue') + geom_line(data = comb, aes(y = gas.GASREGW), color = 'green') + theme_classic()
ggplot(comb, aes(x=index(comb), y = rbob.Close)) + geom_line(color = 'blue') + geom_line(data = comb, aes(y = gas.GASREGW), color = 'green') + theme_classic()
ggplot(comb['2020/'], aes(x=index(comb), y = rbob.Close)) + geom_line(color = 'blue') + geom_line(data = comb, aes(y = gas.GASREGW), color = 'green') + theme_classic()
ggplot(comb['2020/',], aes(x=index(comb), y = rbob.Close)) + geom_line(color = 'blue') + geom_line(data = comb, aes(y = gas.GASREGW), color = 'green') + theme_classic()
ggplot(comb['2020/',], aes(x=index(comb), y = rbob.Close)) + geom_line(color = 'blue') + geom_line(data = comb['2020/'], aes(y = gas.GASREGW), color = 'green') + theme_classic()
ggplot(comb['2020/',], aes(x=index(comb), y = rbob.Close)) + geom_line(color = 'blue') + geom_line(data = comb['2020/',], aes(y = gas.GASREGW), color = 'green') + theme_classic()
ggplot(comb['2020/',], aes(x=index(comb['2020/']), y = rbob.Close)) + geom_line(color = 'blue') + geom_line(data = comb['2020/',], aes(y = gas.GASREGW), color = 'green') + theme_classic()
head(comb)
head(index(comb))
head(rownames(comb))
ggplot(comb, aes(x=rownames(comb), y = rbob.Close)) + geom_line(color = 'blue') + geom_line(data = comb, aes(y = gas.GASREGW), color = 'green') + theme_classic()
ggplot(fortify(comb), aes(x=rownames(comb), y = rbob.Close)) + geom_line(color = 'blue') + geom_line(data = comb, aes(y = gas.GASREGW), color = 'green') + theme_classic()
ggplot(fortify(comb), aes(x=index(comb), y = rbob.Close)) + geom_line(color = 'blue') + geom_line(data = comb, aes(y = gas.GASREGW), color = 'green') + theme_classic()
head(index(comb))
index(comb) <- row.names(comb)
index(comb) <- rownames(comb)
data.frame(comb)
test <- data.frame(rownames(comb), comb)
head(test)
head(index(test))
rownames(test) <- NULL
colnames(test) <- c('Date','RBOB','Gas')
head(test)
tail(test)
str(test)
test$Date <- as.Date(test$Date,'%Y-%m-%d')
head(test)
ggplot(test[test$Date > '2020-01-01'], aes(x = Date, y = RBOB))
ggplot(test[test$Date > '2020-01-01',], aes(x = Date, y = RBOB))
ggplot(test[test$Date > '2020-01-01',], aes(x = Date, y = RBOB)) + geom_line()
ggplot(test[test$Date > '2020-01-01',], aes(x = Date, y = RBOB)) + geom_line() + theme_classic()
ggplot(test[test$Date > '2020-01-01',], aes(x = Date, y = RBOB)) + geom_line() + geom_line(test[test$Date > '2020-01-01',], aes(y = Gas), color = 'purple') theme_classic()
ggplot(test[test$Date > '2020-01-01',], aes(x = Date, y = RBOB)) + geom_line() + geom_line(test[test$Date > '2020-01-01',], aes(y = Gas), color = 'purple') + theme_classic()
ggplot(test[test$Date > '2020-01-01',], aes(x = Date, y = RBOB)) + geom_line() + theme_classic()
ggplot(test[test$Date > '2020-01-01',], aes(x = Date, y = RBOB)) + geom_line() + geom_line(aes(y = Gas)) theme_classic()
ggplot(test[test$Date > '2020-01-01',], aes(x = Date, y = RBOB)) + geom_line() + geom_line(aes(y = Gas)) + theme_classic()
ggplot(test[test$Date > '2020-01-01',], aes(x = Date, y = RBOB)) + geom_line() + geom_line(aes(y = Gas), color = 'purple') + theme_classic()
ggplot(test[test$Date > '2021-01-01',], aes(x = Date, y = RBOB)) + geom_line() + geom_line(aes(y = Gas), color = 'purple') + theme_classic()
ggplot(test[test$Date > '2021-01-01',], aes(x = Date, y = Gas - RBOB)) + geom_line() + geom_line(aes(y = Gas), color = 'purple') + theme_classic()
ggplot(test[test$Date > '2021-01-01',], aes(x = Date, y = Gas - RBOB)) + geom_line()+ theme_classic()
cor(RBOB, GAS)
cor(test$RBOB, test$Gas)
cor(test$RBOB, test$Gas, use = 'p')
ggplot(test[test$Date > '2021-01-01',], aes(x = Date, y = RBOB)) + geom_line() + geom_line(aes(y = Gas), color = 'purple') + theme_classic()
ggplot(test[test$Date > '2022-01-01',], aes(x = Date, y = RBOB)) + geom_line() + geom_line(aes(y = Gas), color = 'purple') + theme_classic()
tail(test)
test$RBOB['2022-07-05']
test$RBOB['2022-07-05',]
test$RBOB['2022-07-05']
test['2022-07-05']
test['2022-07-05',]
test[test$Date == '2022-07-05']
test[test$Date == '2022-07-05',]
test[test$Date == '2022-07-05',"RBOB"]
test[test$Date == '2022-07-05',"RBOB"] <- 3.24
ggplot(test[test$Date > '2022-01-01',], aes(x = Date, y = RBOB)) + geom_line() + geom_line(aes(y = Gas), color = 'purple') + theme_classic()
ggplot(test[test$Date > '2022-01-01',], aes(x = Date, y = RBOB)) + geom_line() + geom_line(aes(y = Gas - 0.75), color = 'purple') + theme_classic()
ggplot(test[test$Date > '2021-01-01',], aes(x = Date, y = RBOB)) + geom_line() + geom_line(aes(y = Gas - 0.75), color = 'purple') + theme_classic()
ggplot(test[test$Date > '2021-01-01',], aes(x = Date, y = RBOB)) + geom_line() + geom_line(aes(y = Gas - 0.80), color = 'purple') + theme_classic()
ggplot(test[test$Date > '2021-01-01',], aes(x = Date, y = RBOB)) + geom_line() + geom_line(aes(y = Gas - 0.85), color = 'purple') + theme_classic()
tail(test,50)
3.24 + 0.85
train <- test[1:1132,]
train <- test[1:1131,]
tail(train)
summary(lm(Gas ~ RBOB, data = train))
model <- lm(Gas ~ RBOB, data = train)
predict(model, newdata = 3.24)
predict(model, RBOB = 3.24)
p <- as.data.frame(3.24)
colnames(p) <- "RBOB"
predict(model, p)
shiny::runApp('C:/Users/Irfan/Desktop/WishboneAnalytics/ElectionSwingApp')
cd("..//desktop//wishboneanalytics//electionswingapp")
setwd("..//desktop//wishboneanalytics//electionswingapp")
runApp('C:/Users/Irfan/Desktop/WishboneAnalytics/ElectionSwingApp')
dir()
runApp('C:/Users/Irfan/Desktop/WishboneAnalytics/ElectionSwingApp')
runApp('C:/Users/Irfan/Desktop/WishboneAnalytics/ElectionSwingApp')
runApp('C:/Users/Irfan/Desktop/WishboneAnalytics/ElectionSwingApp')
library(dplyr)
library(ggplot2)
library(urbnmapr)
library(maps)
data <- read.csv("countypres.csv")
data_clean <- data %>% select(c('year','state','state_po','county_name','county_fips','office','candidate','party','candidatevotes','totalvotes'))
data_clean <- aggregate(candidatevotes ~.,data_clean, FUN = sum)
winners <- data_clean %>% group_by(year, county_name, county_fips, office) %>% filter(candidatevotes == max(candidatevotes, na.rm = TRUE))
winners <- winners %>% filter(party %in% c('DEMOCRAT','REPUBLICAN'))
winners$color <- ifelse(winners$party == 'DEMOCRAT','CornflowerBlue','Brown1')
winners <- winners %>% filter(totalvotes > 0)
i = 1
while(i <= length(winners$county_fips)){
if(nchar(winners$county_fips[i]) < 5){
winners$county_fips[i] <- paste0('0',winners$county_fips[i])
}
i = i + 1
}
comb <- as.data.frame(left_join(winners, urbnmapr::counties, by = c("county_fips" = "county_fips")))
ggplot() +
geom_sf(data = counties, aes(fill = totpop10))
runApp('C:/Users/Irfan/Desktop/WishboneAnalytics/ElectionSwingApp')
runApp('C:/Users/Irfan/Desktop/WishboneAnalytics/ElectionSwingApp')
#Retrieving key data
library(Quandl)
library(ggplot2)
Quandl.api_key('5nR8m4AEx1eMok5sF-K5')
#GDP
gdp <- Quandl("FRED/GDP", type = 'xts')
#Leading Index
lei <- Quandl("FRED/USSLIND", type = 'xts')
#Unemployment Rate
unr <- Quandl("FRED/UNRATE", type = 'xts')
#Initial Claims
ic <- Quandl("FRED/ICSA", type = 'xts')
#PMI
pmi <- Quandl("ISM/MAN_PMI", type = 'xts')
#Industrial Production
ip <- Quandl("FRED/INDPRO", type = 'xts')
#CPI
cpi <- Quandl("FRED/CPIAUCSL", type = 'xts')
#Effective Fed Funds Rate
ff <- Quandl("FRED/DFF", type = 'xts')
#Total Public Debt (as % of GDP)
debt <- Quandl("FRED/GFDEGDQ188S", type = 'xts')
#UMich Consumer Sentiment
mich <- Quandl("UMICH/SOC1", type='xts')
#AAII Sentiment
aaii <- Quandl("AAII/AAII_SENTIMENT", type='xts')
ggplot(data = fortify( ), aes(x = Index, y = )) + geom_line() + theme_classic()
ggplot(data = fortify(ip), aes(x = Index, y = ip)) + geom_line() + theme_classic()
ggplot(data = fortify(pmi), aes(x = Index, y = pmi)) + geom_line() + theme_classic()
ggplot(data = fortify(pmi['2000/']), aes(x = Index, y = pmi)) + geom_line() + theme_classic()
ggplot(data = fortify(pmi['2000/']), aes(x = Index, y = pmi['2000/'])) + geom_line() + theme_classic()
ggplot(data = fortify(pmi['2015/']), aes(x = Index, y = pmi['2015/'])) + geom_line() + theme_classic()
ggplot(data = fortify(pmi['2015/']), aes(x = Index, y = pmi['2015/'])) + geom_line() + theme_classic() + geom_line(fortify(ip['2015/']), aes(y = ip, x = Index))
ggplot(data = fortify(pmi['2015/']), aes(x = Index, y = pmi['2015/'])) + geom_line() + theme_classic() + geom_line(fortify(ip['2015/']), aes(x = Index, y = up))
ggplot(data = fortify(pmi['2015/']), aes(x = Index, y = pmi['2015/'])) + geom_line() + theme_classic() + geom_line(fortify(ip['2015/']), aes(x = Index, y = ip))
ggplot(data = fortify(pmi['2015/']), aes(x = Index, y = pmi['2015/'])) + geom_line() + theme_classic() + geom_line(fortify(ip['2015/']), aes(y = ip))
ggplot(data = fortify(pmi['2015/']), aes(x = Index, y = pmi['2015/'])) + geom_line() + theme_classic() + geom_line(fortify(ip['2015/']), aes(y = ip['2015/']))
ggplot(data = fortify(pmi['2015/']), aes(x = Index, y = pmi['2015/'])) + geom_line() + theme_classic() + geom_line(fortify(ip['2015/']), aes(x = Index, y = ip['2015/']))
ggplot(data = fortify(pmi['2015/']), aes(x = Index, y = pmi['2015/'])) + geom_line() + theme_classic() + geom_line(data = fortify(ip['2015/']), aes(x = Index, y = ip['2015/']))
ggplot(data = fortify(pmi['2015/']), aes(x = Index, y = pmi['2015/'])) + geom_line() + theme_classic() + geom_line(data = fortify(ip['2015/']), aes(x = Index, y = ip['2015/']/2))
ggplot(data = fortify(pmi['2007/']), aes(x = Index, y = pmi['2007/'])) + geom_line() + theme_classic() + geom_line(data = fortify(ip['2007/']), aes(x = Index, y = ip['2007/']/2))
ggplot(data = fortify(pmi['2007/']), aes(x = Index, y = pmi['2007/'])) + geom_line() + theme_classic() + geom_line(data = fortify(ip['2007/']), aes(x = Index, y = ip['2007/']))
ggplot(data = fortify(pmi['2007/']), aes(x = Index, y = pmi['2007/'])) + geom_line() + theme_classic() + geom_line(data = fortify(aaii['2007/']), aes(x = Index, y = aaii['2007/']))
ggplot(data = fortify(aaii['2015/']), aes(x = Index, y = aaii['2015/'])) + geom_line() + theme_classic()
head(aaii)
ggplot(data = fortify(aaii['2015/']), aes(x = Index, y = aaii['2015/','Bull-Bear Spread'])) + geom_line() + theme_classic()
ggplot(data = fortify(ff['2015/']), aes(x = Index, y = ff['2015/'])) + geom_line() + theme_classic()
ggplot(data = fortify(unr['2015/']), aes(x = Index, y = unr['2015/'])) + geom_line() + theme_classic()
library(highcharter)
install.packages('highcharter')
install.packages('highcharter')
hcmap("custom/usa-and-canada")
library(highcharter)
hcmap("countries/us/us-ca-all")
hcmap("countries/us")
hcmap("countries/us/us-all")
get_data_from_map("countries/us/us-all")
get_data_from_map(download_map_data("countries/us/us-all"))
get_data_from_map(download_map_data(""countries/us/us-all-all-highres""))
get_data_from_map(download_map_data("countries/us/us-all-all-highres"))
hcmap("countries/us/us-all-all-highres")
install.packages('tmaps')
install.packages('tmap')
install.packages("tmap")
